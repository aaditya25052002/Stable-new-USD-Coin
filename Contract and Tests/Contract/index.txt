// // SPDX-License-Identifier: MIT
// pragma solidity ^0.8.0;

// import "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol";
// import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

// contract nUSD is ERC20 {
//     AggregatorV3Interface internal priceFeed;
//     address public admin;

//     constructor(address _priceFeed) ERC20("nUSD", "nUSD") {
//         priceFeed = AggregatorV3Interface(_priceFeed);
//         admin = msg.sender;
//     }

//     function getLatestETHUSDPrice() public view returns (uint256) {
//         (, int price,,,) = priceFeed.latestRoundData();
//         return uint256(price);
//     }

//     function depositETH() external payable {
//         uint256 price = getLatestETHUSDPrice();
//         uint256 nUSDAmount = (msg.value * price) / 2 ether;
//         _mint(msg.sender, nUSDAmount);
//     }

//     function redeem(uint256 _nUSDAmount) external {
//         uint256 price = getLatestETHUSDPrice();
//         uint256 ethAmount = (_nUSDAmount * 2 ether) / price;
//         _burn(msg.sender, _nUSDAmount);
//         (bool success, ) = msg.sender.call{value: ethAmount}("");
//         require(success, "ETH Transfer Failed");
//     }

//     function withdrawETH(uint _amount) external {
//         require(msg.sender == admin, "Only admin can withdraw ETH");
//         (bool success, ) = admin.call{value: _amount}("");
//         require(success, "ETH Transfer Failed");
//     }

//     receive() external payable {}
// }
